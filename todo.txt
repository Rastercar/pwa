1- learn to handle global state with apollo, we probably need to use local fields and maybe reactive vars (not the vue ones)
after that create a way to get the logged in user using apollo cache as a source of truth

2- Create way to have a folder of env jsons that are loaded dynamically
depending on how you start the app, just like in the api, and validate said envs

3- create way to extract errors from graphql, (return error code on the api ?)

4- integrate with a form validation lib

5- start work on route access authentication

---- NOTES ----

if a graphql query fails, if the data it would fetch is set by another query or mutation, the query data will not be reactive since it failed !

graphql values are reactive ! (thank god, whenever theyre updated the components react)
avaliable mutations are defined server side, client side can create their own definitions to query agains such mutations using variables 